#version 330 core
precision mediump float;
varying vec2 TexCoords;


uniform sampler2D ourTexture1;
uniform float filterRatio;

const float offset = 1.0 / 300;  
const vec2 offsets[9] = vec2[](
        vec2(-offset, offset),  // top-left
        vec2(0.0f,    offset),  // top-center
        vec2(offset,  offset),  // top-right
        vec2(-offset, 0.0f),    // center-left
        vec2(0.0f,    0.0f),    // center-center
        vec2(offset,  0.0f),    // center-right
        vec2(-offset, -offset), // bottom-left
        vec2(0.0f,    -offset), // bottom-center
        vec2(offset,  -offset)  // bottom-right
    );
	
	float kernel[9] = float[](
        -1, -1, -1,
        -1,  9, -1,
        -1, -1, -1
    );
	
	float blurKernel[9] = float[](
    1.0 / 16, 2.0 / 16, 1.0 / 16,
    2.0 / 16, 4.0 / 16, 2.0 / 16,
    1.0 / 16, 2.0 / 16, 1.0 / 16  
);

float edgeKernel[9] = float[](
        1, 1, 1,
        1, -8, 1,
        1, 1, 1
    );

void main()
{
	vec3 sampleTex[9];
    for(int i = 0; i < 9; i++)
    {
        sampleTex[i] = vec3(texture2D(ourTexture1, TexCoords.st + offsets[i]));
    }
    vec3 outColor;
    for(int i = 0; i < 9; i++)
        outColor += sampleTex[i] * edgeKernel[i];
	
    gl_FragColor = vec4(clamp(outColor,vec3(0.0),vec3(1.0)),1.0);
}